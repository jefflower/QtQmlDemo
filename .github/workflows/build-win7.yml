name: Build Win7 Compatible App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Qt
      shell: powershell
      run: |
        # Install aqtinstall
        pip install aqtinstall

        # Create Qt directory
        New-Item -ItemType Directory -Path "Qt" -Force

        # Install Qt to Qt directory
        Write-Host "Installing Qt 5.15.2..."
        python -m aqt install-qt `
          --outputdir Qt `
          windows desktop 5.15.2 win64_mingw81

        # Install additional modules
        python -m aqt install-qt `
          --outputdir Qt `
          windows desktop 5.15.2 win64_mingw81 `
          -m qtquickcontrols2

        # Install MinGW
        Write-Host "Installing MinGW..."
        python -m aqt install-tool `
          --outputdir Qt `
          windows desktop tools_mingw qt.tools.win64_mingw810

        # Show what was installed
        Write-Host "Installation complete. Directory contents:"
        Get-ChildItem -Path . -Name
        Write-Host "Qt directory contents:"
        Get-ChildItem -Path Qt -Name

    - name: Verify Installation
      shell: cmd
      run: |
        echo Current directory contents:
        dir

        echo.
        echo Qt directory contents:
        dir Qt

        echo.
        echo Qt subdirectories:
        dir Qt /ad /b

        echo.
        echo Checking for Qt installation:
        if exist "Qt\5.15.2\mingw81_64" (
          echo Found Qt at: Qt\5.15.2\mingw81_64
          dir Qt\5.15.2\mingw81_64
        ) else (
          echo Qt not found at expected location Qt\5.15.2\mingw81_64
          echo.
          echo Searching for Qt5Config.cmake:
          for /f "delims=" %%i in ('dir Qt /s /b ^| findstr /i "Qt5Config.cmake"') do (
            echo Found Qt5Config.cmake at: %%i
            for %%j in ("%%i\..\..\..") do set QT_PATH=%%~fj
          )
          if defined QT_PATH (
            echo Qt root path detected: %QT_PATH%
          )
        )

        echo.
        echo Checking for MinGW:
        if exist "Qt\Tools\mingw810_64" (
          echo Found MinGW at: Qt\Tools\mingw810_64
        ) else (
          echo MinGW not found at expected location Qt\Tools\mingw810_64
          echo.
          echo Contents of Qt\Tools:
          dir Qt\Tools /ad /b 2>nul
        )

    - name: Build
      shell: cmd
      run: |
        set QT_DIR=%CD%\Qt\5.15.2\mingw81_64
        set MINGW_DIR=%CD%\Qt\Tools\mingw810_64
        set PATH=%MINGW_DIR%\bin;%QT_DIR%\bin;%PATH%

        echo Build environment:
        echo QT_DIR=%QT_DIR%
        echo MINGW_DIR=%MINGW_DIR%

        if not exist "%QT_DIR%\lib\cmake\Qt5\Qt5Config.cmake" (
          echo ERROR: Qt5Config.cmake not found
          echo Checking Qt directory:
          dir %QT_DIR%\lib\cmake
          exit 1
        )

        mkdir build
        cd build

        cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=%QT_DIR% -DQt5_DIR=%QT_DIR%\lib\cmake\Qt5
        if %errorlevel% neq 0 exit /b 1

        mingw32-make -j2
        if %errorlevel% neq 0 exit /b 1

        echo Build complete!
        dir *.exe

    - name: Package
      shell: cmd
      run: |
        mkdir deploy
        copy build\QtQmlDemo.exe deploy\

        set QT_DIR=%CD%\Qt\5.15.2\mingw81_64
        set MINGW_DIR=%CD%\Qt\Tools\mingw810_64
        set PATH=%QT_DIR%\bin;%MINGW_DIR%\bin;%PATH%

        echo Deploying Qt dependencies...
        %QT_DIR%\bin\windeployqt.exe ^
          --qmldir qml ^
          --quick ^
          --no-translations ^
          --no-system-d3d-compiler ^
          --no-opengl-sw ^
          --no-virtualkeyboard ^
          --no-angle ^
          --release ^
          deploy\QtQmlDemo.exe

        echo.
        echo Copying MinGW runtime libraries...
        copy "%MINGW_DIR%\bin\libgcc_s_seh-1.dll" deploy\
        copy "%MINGW_DIR%\bin\libstdc++-6.dll" deploy\
        copy "%MINGW_DIR%\bin\libwinpthread-1.dll" deploy\

        echo.
        echo Creating Win7 compatibility launcher...
        echo @echo off > deploy\QtQmlDemo_Win7.bat
        echo set QT_OPENGL=software >> deploy\QtQmlDemo_Win7.bat
        echo start QtQmlDemo.exe %%* >> deploy\QtQmlDemo_Win7.bat

        echo.
        echo Verifying critical DLLs:
        if exist deploy\Qt5Core.dll (
          echo [OK] Qt5Core.dll found
        ) else (
          echo [ERROR] Qt5Core.dll missing!
        )

        echo.
        echo Manually copying additional Qt libraries to ensure completeness...
        copy "%QT_DIR%\bin\Qt5Core.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Gui.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Qml.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QmlModels.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QmlWorkerScript.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Quick.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QuickControls2.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QuickTemplates2.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QuickShapes.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Network.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Widgets.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Svg.dll" deploy\ 2>nul

        echo.
        echo Copying Qt plugins...
        if not exist deploy\platforms mkdir deploy\platforms
        copy "%QT_DIR%\plugins\platforms\qwindows.dll" deploy\platforms\ 2>nul

        if not exist deploy\imageformats mkdir deploy\imageformats
        copy "%QT_DIR%\plugins\imageformats\*.dll" deploy\imageformats\ 2>nul

        if not exist deploy\styles mkdir deploy\styles
        copy "%QT_DIR%\plugins\styles\qwindowsvistastyle.dll" deploy\styles\ 2>nul

        if not exist deploy\qmltooling mkdir deploy\qmltooling
        xcopy /E /I /Y "%QT_DIR%\plugins\qmltooling" deploy\qmltooling 2>nul

        echo.
        echo Copying QML modules...
        if not exist deploy\QtQuick.2 mkdir deploy\QtQuick.2
        xcopy /E /I /Y "%QT_DIR%\qml\QtQuick.2" deploy\QtQuick.2 2>nul

        if not exist deploy\QtQuick mkdir deploy\QtQuick
        xcopy /E /I /Y "%QT_DIR%\qml\QtQuick" deploy\QtQuick 2>nul

        if not exist deploy\QtQml mkdir deploy\QtQml
        xcopy /E /I /Y "%QT_DIR%\qml\QtQml" deploy\QtQml 2>nul

        if not exist deploy\Qt mkdir deploy\Qt
        xcopy /E /I /Y "%QT_DIR%\qml\Qt" deploy\Qt 2>nul

        echo.
        echo Copying QML source files as backup...
        if not exist deploy\qml mkdir deploy\qml
        copy qml\*.qml deploy\qml\

        echo.
        echo Copying resources...
        if exist resources\logo.png (
          if not exist deploy\resources mkdir deploy\resources
          copy resources\logo.png deploy\resources\
        )

        echo.
        echo Package contents:
        dir deploy\*.dll deploy\*.exe
        echo.
        echo QML files:
        dir deploy\qml\*.qml 2>nul

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: QtQmlDemo-Win7-Build-${{ github.run_number }}
        path: deploy/
        retention-days: 30