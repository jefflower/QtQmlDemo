name: Build Win7 Compatible App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Qt with aqtinstall
      shell: powershell
      run: |
        # Install aqtinstall
        pip install aqtinstall

        # Create Qt directory
        New-Item -ItemType Directory -Force -Path "${{ github.workspace }}/Qt"

        # Install Qt
        Write-Host "Installing Qt 5.15.2..."
        python -m aqt install-qt `
          --outputdir "${{ github.workspace }}/Qt" `
          windows desktop 5.15.2 win64_mingw81 `
          -m qtquickcontrols2

        # Install MinGW
        Write-Host "Installing MinGW tools..."
        python -m aqt install-tool `
          --outputdir "${{ github.workspace }}/Qt" `
          windows desktop tools_mingw qt.tools.win64_mingw810

        # List installed directories
        Write-Host "Qt installation structure:"
        Get-ChildItem -Path "${{ github.workspace }}/Qt" -Recurse -Directory | Select-Object -First 20

    - name: Verify Installation
      shell: powershell
      run: |
        $qtRoot = "${{ github.workspace }}/Qt"

        Write-Host "Checking Qt installation..."
        if (Test-Path "$qtRoot/5.15.2/mingw81_64") {
          Write-Host "✓ Qt found at: $qtRoot/5.15.2/mingw81_64"
          Get-ChildItem "$qtRoot/5.15.2/mingw81_64" -Directory
        } else {
          Write-Host "Qt not at expected location, searching..."
          Get-ChildItem $qtRoot -Recurse -Filter "Qt5Config.cmake" | Select-Object -First 1
        }

        Write-Host "`nChecking MinGW..."
        if (Test-Path "$qtRoot/Tools/mingw810_64") {
          Write-Host "✓ MinGW found at: $qtRoot/Tools/mingw810_64"
        } else {
          Write-Host "MinGW not found, searching..."
          Get-ChildItem $qtRoot -Directory -Recurse | Where-Object {$_.Name -like "mingw*"}
        }

    - name: Build
      shell: cmd
      run: |
        set QT_ROOT=%CD%\Qt
        set QT_DIR=%QT_ROOT%\5.15.2\mingw81_64
        set MINGW_DIR=%QT_ROOT%\Tools\mingw810_64
        set PATH=%MINGW_DIR%\bin;%QT_DIR%\bin;%PATH%

        echo Building with:
        echo QT_DIR=%QT_DIR%
        echo MINGW_DIR=%MINGW_DIR%

        if not exist "%QT_DIR%" (
          echo ERROR: Qt not found at %QT_DIR%
          echo Listing Qt directory:
          dir %QT_ROOT%
          exit 1
        )

        mkdir build
        cd build

        cmake .. ^
          -G "MinGW Makefiles" ^
          -DCMAKE_BUILD_TYPE=Release ^
          -DCMAKE_PREFIX_PATH=%QT_DIR% ^
          -DQt5_DIR=%QT_DIR%\lib\cmake\Qt5

        if %errorlevel% neq 0 exit /b %errorlevel%

        mingw32-make -j2
        if %errorlevel% neq 0 exit /b %errorlevel%

        echo Build successful!
        dir *.exe

    - name: Package
      shell: powershell
      run: |
        $qtDir = "${{ github.workspace }}/Qt/5.15.2/mingw81_64"
        $mingwDir = "${{ github.workspace }}/Qt/Tools/mingw810_64"

        # Create deploy directory
        New-Item -ItemType Directory -Force -Path "deploy"

        # Copy executable
        Copy-Item "build/QtQmlDemo.exe" -Destination "deploy/" -ErrorAction Stop

        # Deploy Qt dependencies
        & "$qtDir/bin/windeployqt.exe" `
          --dir deploy `
          --qmldir qml `
          --quick `
          --no-translations `
          --no-system-d3d-compiler `
          --no-opengl-sw `
          --release `
          deploy/QtQmlDemo.exe

        # Copy MinGW runtime
        Copy-Item "$mingwDir/bin/libgcc_s_seh-1.dll" -Destination "deploy/" -ErrorAction SilentlyContinue
        Copy-Item "$mingwDir/bin/libstdc++-6.dll" -Destination "deploy/" -ErrorAction SilentlyContinue
        Copy-Item "$mingwDir/bin/libwinpthread-1.dll" -Destination "deploy/" -ErrorAction SilentlyContinue

        # Create launcher
        @"
        @echo off
        set QT_OPENGL=software
        set QT_ANGLE_PLATFORM=d3d9
        start QtQmlDemo.exe %*
        "@ | Out-File -FilePath "deploy/QtQmlDemo.bat" -Encoding ASCII

        # Create README
        @"
        QtQmlDemo for Windows 7
        ========================

        Requirements:
        - Windows 7 SP1 or later
        - Visual C++ Redistributable 2015-2019

        To run:
        1. Double-click QtQmlDemo.bat (recommended)
        2. Or double-click QtQmlDemo.exe

        Troubleshooting:
        - Install VC++ Redistributable if missing
        - Update DirectX if graphics issues occur
        - Run as administrator if needed
        "@ | Out-File -FilePath "deploy/README.txt" -Encoding UTF8

        Write-Host "Package contents:"
        Get-ChildItem deploy

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: QtQmlDemo-Win7-Build-${{ github.run_number }}
        path: deploy/
        retention-days: 30