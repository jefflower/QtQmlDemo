name: Build Win7 Compatible App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Qt
      shell: powershell
      run: |
        # Install aqtinstall
        pip install aqtinstall

        # Create Qt directory
        New-Item -ItemType Directory -Path "Qt" -Force

        # Install Qt to Qt directory
        Write-Host "Installing Qt 5.15.2..."
        python -m aqt install-qt `
          --outputdir Qt `
          windows desktop 5.15.2 win64_mingw81

        # Install additional modules
        python -m aqt install-qt `
          --outputdir Qt `
          windows desktop 5.15.2 win64_mingw81 `
          -m qtquickcontrols2

        # Install MinGW
        Write-Host "Installing MinGW..."
        python -m aqt install-tool `
          --outputdir Qt `
          windows desktop tools_mingw qt.tools.win64_mingw810

        # Show what was installed
        Write-Host "Installation complete. Directory contents:"
        Get-ChildItem -Path . -Name
        Write-Host "Qt directory contents:"
        Get-ChildItem -Path Qt -Name

    - name: Verify Installation
      shell: cmd
      run: |
        echo Current directory contents:
        dir

        echo.
        echo Qt directory contents:
        dir Qt

        echo.
        echo Qt subdirectories:
        dir Qt /ad /b

        echo.
        echo Checking for Qt installation:
        if exist "Qt\5.15.2\mingw81_64" (
          echo Found Qt at: Qt\5.15.2\mingw81_64
          dir Qt\5.15.2\mingw81_64
        ) else (
          echo Qt not found at expected location Qt\5.15.2\mingw81_64
          echo.
          echo Searching for Qt5Config.cmake:
          for /f "delims=" %%i in ('dir Qt /s /b ^| findstr /i "Qt5Config.cmake"') do (
            echo Found Qt5Config.cmake at: %%i
            for %%j in ("%%i\..\..\..") do set QT_PATH=%%~fj
          )
          if defined QT_PATH (
            echo Qt root path detected: %QT_PATH%
          )
        )

        echo.
        echo Checking for MinGW:
        if exist "Qt\Tools\mingw810_64" (
          echo Found MinGW at: Qt\Tools\mingw810_64
        ) else (
          echo MinGW not found at expected location Qt\Tools\mingw810_64
          echo.
          echo Contents of Qt\Tools:
          dir Qt\Tools /ad /b 2>nul
        )

    - name: Build
      shell: cmd
      run: |
        set QT_DIR=%CD%\Qt\5.15.2\mingw81_64
        set MINGW_DIR=%CD%\Qt\Tools\mingw810_64
        set PATH=%MINGW_DIR%\bin;%QT_DIR%\bin;%PATH%

        echo Build environment:
        echo QT_DIR=%QT_DIR%
        echo MINGW_DIR=%MINGW_DIR%

        if not exist "%QT_DIR%\lib\cmake\Qt5\Qt5Config.cmake" (
          echo ERROR: Qt5Config.cmake not found
          echo Checking Qt directory:
          dir %QT_DIR%\lib\cmake
          exit 1
        )

        mkdir build
        cd build

        cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=%QT_DIR% -DQt5_DIR=%QT_DIR%\lib\cmake\Qt5
        if %errorlevel% neq 0 exit /b 1

        mingw32-make -j2
        if %errorlevel% neq 0 exit /b 1

        echo Build complete!
        dir *.exe

    - name: Download MySQL Connector/C
      shell: powershell
      run: |
        Write-Host "Downloading MySQL Connector/C 6.1.11..."

        # 使用GitHub镜像加速下载
        $url = "https://downloads.mysql.com/archives/get/p/19/file/mysql-connector-c-6.1.11-winx64.zip"
        $output = "mysql-connector.zip"

        # 尝试下载
        try {
          Invoke-WebRequest -Uri $url -OutFile $output -TimeoutSec 300
          Write-Host "Download successful"
        } catch {
          Write-Host "Download from MySQL failed, trying alternative method..."
          # 如果失败，使用仓库中的libmysql.dll作为运行时库
          # 但编译会跳过
          exit 0
        }

        # 解压
        if (Test-Path $output) {
          Write-Host "Extracting MySQL Connector..."
          Expand-Archive -Path $output -DestinationPath "mysql-connector-full" -Force

          # 显示目录结构
          Get-ChildItem -Path "mysql-connector-full" -Recurse -Directory | Select-Object FullName

          Write-Host "MySQL Connector extracted successfully"
        }

    - name: Install Qt Source
      shell: powershell
      run: |
        Write-Host "Installing Qt 5.15.2 source code..."
        python -m aqt install-src --outputdir Qt windows desktop 5.15.2

    - name: Build Qt MySQL Plugin
      shell: cmd
      run: |
        echo Building Qt MySQL plugin from source...

        set QT_DIR=%CD%\Qt\5.15.2\mingw81_64
        set MINGW_DIR=%CD%\Qt\Tools\mingw810_64
        set PATH=%MINGW_DIR%\bin;%QT_DIR%\bin;%PATH%

        REM 查找MySQL Connector目录
        for /d %%i in (mysql-connector-full\mysql-connector-c-*) do set MYSQL_ROOT=%%i
        if not defined MYSQL_ROOT (
          echo [WARNING] MySQL Connector not found, skipping plugin compilation
          goto skip_plugin_build
        )

        echo MySQL Connector found at: %MYSQL_ROOT%
        set MYSQL_INCDIR=%CD%\%MYSQL_ROOT%\include
        set MYSQL_LIBDIR=%CD%\%MYSQL_ROOT%\lib

        echo MYSQL_INCDIR=%MYSQL_INCDIR%
        echo MYSQL_LIBDIR=%MYSQL_LIBDIR%

        REM 检查目录是否存在
        if not exist "%MYSQL_INCDIR%\mysql.h" (
          echo [WARNING] mysql.h not found, skipping plugin compilation
          goto skip_plugin_build
        )

        cd Qt\5.15.2\Src\qtbase\src\plugins\sqldrivers

        echo Configuring MySQL plugin...
        qmake -- MYSQL_INCDIR="%MYSQL_INCDIR%" MYSQL_LIBDIR="%MYSQL_LIBDIR%"
        if errorlevel 1 (
          echo [WARNING] qmake configuration failed, skipping plugin compilation
          cd %CD%\..\..\..\..
          goto skip_plugin_build
        )

        cd mysql
        qmake
        if errorlevel 1 (
          echo [WARNING] qmake for mysql plugin failed, skipping plugin compilation
          cd %CD%\..\..\..\..\..
          goto skip_plugin_build
        )

        mingw32-make
        if errorlevel 1 (
          echo [WARNING] Build failed, skipping plugin compilation
          cd %CD%\..\..\..\..\..
          goto skip_plugin_build
        )

        echo [OK] Qt MySQL plugin built successfully
        echo Listing built DLL files:
        dir /b *.dll

        REM 复制到临时位置供后续使用
        echo Creating mysql_plugin_compiled directory...
        cd %CD%\..\..\..\..\..\..
        mkdir mysql_plugin_compiled

        echo Copying qsqlmysql.dll...
        copy Qt\5.15.2\Src\qtbase\src\plugins\sqldrivers\mysql\qsqlmysql.dll mysql_plugin_compiled\

        if exist mysql_plugin_compiled\qsqlmysql.dll (
          echo [SUCCESS] qsqlmysql.dll copied successfully
          dir mysql_plugin_compiled\qsqlmysql.dll
        ) else (
          echo [ERROR] Failed to copy qsqlmysql.dll
        )

        goto end_plugin_build

        :skip_plugin_build
        echo Plugin compilation skipped, will use repository DLL if available

        :end_plugin_build
        echo Continuing with package...

    - name: Package
      shell: cmd
      run: |
        mkdir deploy
        copy build\QtQmlDemo.exe deploy\

        set QT_DIR=%CD%\Qt\5.15.2\mingw81_64
        set MINGW_DIR=%CD%\Qt\Tools\mingw810_64
        set PATH=%QT_DIR%\bin;%MINGW_DIR%\bin;%PATH%

        echo Deploying Qt dependencies...
        %QT_DIR%\bin\windeployqt.exe ^
          --qmldir qml ^
          --quick ^
          --no-translations ^
          --no-system-d3d-compiler ^
          --no-opengl-sw ^
          --no-virtualkeyboard ^
          --no-angle ^
          --release ^
          deploy\QtQmlDemo.exe

        echo.
        echo Copying MinGW runtime libraries...
        copy "%MINGW_DIR%\bin\libgcc_s_seh-1.dll" deploy\
        copy "%MINGW_DIR%\bin\libstdc++-6.dll" deploy\
        copy "%MINGW_DIR%\bin\libwinpthread-1.dll" deploy\

        echo.
        echo Copying MySQL client library...

        REM 优先从MySQL Connector完整包复制
        for /d %%i in (mysql-connector-full\mysql-connector-c-*) do (
          if exist "%%i\lib\libmysql.dll" (
            copy "%%i\lib\libmysql.dll" deploy\
            echo [OK] libmysql.dll copied from MySQL Connector package
            goto mysql_dll_done
          )
        )

        REM 如果没有，使用仓库中的
        if exist "dependencies\mysql\libmysql.dll" (
          copy dependencies\mysql\libmysql.dll deploy\
          echo [OK] libmysql.dll copied from repository
          goto mysql_dll_done
        )

        echo [ERROR] libmysql.dll not found!
        exit /b 1

        :mysql_dll_done

        echo.
        echo ==========================================
        echo Copying Qt MySQL plugin...
        echo ==========================================

        echo Checking for compiled plugin...
        if exist "mysql_plugin_compiled" (
          echo mysql_plugin_compiled directory exists
          dir mysql_plugin_compiled
        ) else (
          echo mysql_plugin_compiled directory NOT found
        )

        if not exist deploy\sqldrivers (
          echo Creating deploy\sqldrivers directory...
          mkdir deploy\sqldrivers
        )

        REM 优先使用刚编译的插件
        if exist "mysql_plugin_compiled\qsqlmysql.dll" (
          echo [INFO] Found compiled qsqlmysql.dll, copying...
          copy /Y mysql_plugin_compiled\qsqlmysql.dll deploy\sqldrivers\
          if exist deploy\sqldrivers\qsqlmysql.dll (
            echo [SUCCESS] Qt MySQL plugin copied from compiled source (Qt 5.15.2 - version matched)
            dir deploy\sqldrivers\qsqlmysql.dll
          ) else (
            echo [ERROR] Copy failed!
          )
        ) else if exist "dependencies\qt-plugins\sqldrivers\qsqlmysql.dll" (
          echo [INFO] Using pre-built plugin from repository...
          copy /Y dependencies\qt-plugins\sqldrivers\qsqlmysql.dll deploy\sqldrivers\
          echo [WARNING] May have version mismatch!
        ) else (
          echo [ERROR] Qt MySQL plugin not found anywhere!
          echo [ERROR] Application will not be able to connect to MySQL database
          echo Searched locations:
          echo   1. mysql_plugin_compiled\qsqlmysql.dll
          echo   2. dependencies\qt-plugins\sqldrivers\qsqlmysql.dll
        )

        echo.
        echo Creating Win7 compatibility launcher...
        echo @echo off > deploy\QtQmlDemo_Win7.bat
        echo set QT_OPENGL=software >> deploy\QtQmlDemo_Win7.bat
        echo start QtQmlDemo.exe %%* >> deploy\QtQmlDemo_Win7.bat

        echo.
        echo Verifying critical DLLs:
        if exist deploy\Qt5Core.dll (
          echo [OK] Qt5Core.dll found
        ) else (
          echo [ERROR] Qt5Core.dll missing!
        )

        if exist deploy\Qt5Sql.dll (
          echo [OK] Qt5Sql.dll found
        ) else (
          echo [ERROR] Qt5Sql.dll missing!
        )

        if exist deploy\libmysql.dll (
          echo [OK] libmysql.dll found
        ) else (
          echo [ERROR] libmysql.dll missing!
        )

        if exist deploy\sqldrivers\qsqlmysql.dll (
          echo [OK] qsqlmysql.dll found
        ) else (
          echo [WARNING] qsqlmysql.dll missing - MySQL connection will not work!
        )

        echo.
        echo Manually copying additional Qt libraries to ensure completeness...
        copy "%QT_DIR%\bin\Qt5Core.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Gui.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Qml.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QmlModels.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QmlWorkerScript.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Quick.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QuickControls2.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QuickTemplates2.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5QuickShapes.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Network.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Sql.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Widgets.dll" deploy\ 2>nul
        copy "%QT_DIR%\bin\Qt5Svg.dll" deploy\ 2>nul

        echo.
        echo Copying Qt plugins...
        if not exist deploy\platforms mkdir deploy\platforms
        copy "%QT_DIR%\plugins\platforms\qwindows.dll" deploy\platforms\ 2>nul

        if not exist deploy\imageformats mkdir deploy\imageformats
        copy "%QT_DIR%\plugins\imageformats\*.dll" deploy\imageformats\ 2>nul

        if not exist deploy\styles mkdir deploy\styles
        copy "%QT_DIR%\plugins\styles\qwindowsvistastyle.dll" deploy\styles\ 2>nul

        if not exist deploy\qmltooling mkdir deploy\qmltooling
        xcopy /E /I /Y "%QT_DIR%\plugins\qmltooling" deploy\qmltooling 2>nul

        echo.
        echo Copying QML modules...
        if not exist deploy\QtQuick.2 mkdir deploy\QtQuick.2
        xcopy /E /I /Y "%QT_DIR%\qml\QtQuick.2" deploy\QtQuick.2 2>nul

        if not exist deploy\QtQuick mkdir deploy\QtQuick
        xcopy /E /I /Y "%QT_DIR%\qml\QtQuick" deploy\QtQuick 2>nul

        if not exist deploy\QtQml mkdir deploy\QtQml
        xcopy /E /I /Y "%QT_DIR%\qml\QtQml" deploy\QtQml 2>nul

        if not exist deploy\Qt mkdir deploy\Qt
        xcopy /E /I /Y "%QT_DIR%\qml\Qt" deploy\Qt 2>nul

        echo.
        echo Copying QML source files as backup...
        if not exist deploy\qml mkdir deploy\qml
        copy qml\*.qml deploy\qml\

        echo.
        echo Copying resources...
        if exist resources\logo.png (
          if not exist deploy\resources mkdir deploy\resources
          copy resources\logo.png deploy\resources\
        )

        echo.
        echo ==========================================
        echo Final Package Verification
        echo ==========================================
        echo.
        echo Checking deploy directory structure:
        tree /F deploy\sqldrivers 2>nul

        echo.
        echo Critical files check:
        if exist deploy\QtQmlDemo.exe echo [OK] QtQmlDemo.exe
        if exist deploy\libmysql.dll echo [OK] libmysql.dll
        if exist deploy\Qt5Sql.dll echo [OK] Qt5Sql.dll
        if exist deploy\sqldrivers\qsqlmysql.dll (
          echo [OK] sqldrivers\qsqlmysql.dll
        ) else (
          echo [MISSING] sqldrivers\qsqlmysql.dll
        )

        echo.
        echo All DLL files in deploy:
        dir /b deploy\*.dll | findstr /v /i "d3dcompiler"

        echo.
        echo All files in deploy\sqldrivers:
        dir /b deploy\sqldrivers 2>nul || echo sqldrivers directory not found or empty

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: QtQmlDemo-Win7-Build-${{ github.run_number }}
        path: deploy/
        retention-days: 30