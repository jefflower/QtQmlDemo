name: Simple Build (Win7 Compatible)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-win7-compatible:
    runs-on: windows-2022

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install aqtinstall
      run: |
        python -m pip install --upgrade pip
        pip install aqtinstall

    - name: Install Qt 5.15.2 and MinGW
      run: |
        aqt install-qt windows desktop 5.15.2 win64_mingw81 -m qtquickcontrols2 --outputdir qt
        aqt install-tool windows desktop tools_mingw qt.tools.win64_mingw810 --outputdir qt

    - name: Setup environment
      shell: powershell
      run: |
        echo "Qt5_DIR=${{ github.workspace }}\qt\5.15.2\mingw81_64" >> $env:GITHUB_ENV
        echo "PATH=${{ github.workspace }}\qt\Tools\mingw810_64\bin;${{ github.workspace }}\qt\5.15.2\mingw81_64\bin;$env:PATH" >> $env:GITHUB_ENV

    - name: Build with CMake
      shell: cmd
      run: |
        set PATH=${{ github.workspace }}\qt\Tools\mingw810_64\bin;%PATH%
        set Qt5_DIR=${{ github.workspace }}\qt\5.15.2\mingw81_64\lib\cmake\Qt5
        set CMAKE_PREFIX_PATH=${{ github.workspace }}\qt\5.15.2\mingw81_64
        echo Qt5_DIR=%Qt5_DIR%
        echo CMAKE_PREFIX_PATH=%CMAKE_PREFIX_PATH%
        mkdir build
        cd build
        cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DQt5_DIR=%Qt5_DIR% -DCMAKE_PREFIX_PATH=%CMAKE_PREFIX_PATH%
        mingw32-make -j2

    - name: Check build output
      shell: cmd
      run: |
        dir build
        if exist build\QtQmlDemo.exe (
          echo Build successful
        ) else (
          echo Build failed - exe not found
          exit 1
        )

    - name: Deploy application
      shell: cmd
      run: |
        mkdir release
        copy build\QtQmlDemo.exe release\
        cd release
        ${{ github.workspace }}\qt\5.15.2\mingw81_64\bin\windeployqt.exe --qmldir ..\qml --quick --no-translations --no-system-d3d-compiler --no-opengl-sw --no-angle --release QtQmlDemo.exe

    - name: Copy MinGW runtime
      shell: cmd
      run: |
        copy "${{ github.workspace }}\qt\Tools\mingw810_64\bin\libgcc_s_seh-1.dll" release\
        copy "${{ github.workspace }}\qt\Tools\mingw810_64\bin\libstdc++-6.dll" release\
        copy "${{ github.workspace }}\qt\Tools\mingw810_64\bin\libwinpthread-1.dll" release\

    - name: Add Win7 compatibility files
      shell: powershell
      run: |
        # Create a batch file for easy launching
        @"
        @echo off
        echo Starting QtQmlDemo...
        set QT_OPENGL=software
        set QT_ANGLE_PLATFORM=d3d9
        start QtQmlDemo.exe
        "@ | Out-File -FilePath "release\Launch_QtQmlDemo.bat" -Encoding ASCII

        # Create README for Windows 7 users
        @"
        QtQmlDemo for Windows 7
        ========================

        Requirements:
        - Windows 7 SP1 or later
        - DirectX 9.0c or later

        To run the application:
        1. Double-click Launch_QtQmlDemo.bat or QtQmlDemo.exe

        If the application doesn't start:
        1. Install Visual C++ Redistributable 2015-2019 (x64)
           Download from: https://aka.ms/vs/16/release/vc_redist.x64.exe
        2. Update DirectX
        3. Try running as administrator

        Included files:
        - QtQmlDemo.exe - Main application
        - Launch_QtQmlDemo.bat - Launcher with compatibility settings
        - Qt and MinGW runtime libraries
        "@ | Out-File -FilePath "release\README_WIN7.txt" -Encoding ASCII

    - name: Create archive
      shell: powershell
      run: |
        Compress-Archive -Path release\* -DestinationPath QtQmlDemo-Win7-Compatible.zip
        Write-Host "Archive created successfully"
        Get-ChildItem release | Format-Table Name, Length

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: QtQmlDemo-Win7-Compatible
        path: |
          QtQmlDemo-Win7-Compatible.zip
          release/
        retention-days: 30

    - name: Upload executable only
      uses: actions/upload-artifact@v4
      with:
        name: QtQmlDemo-Executable
        path: release/QtQmlDemo.exe
        retention-days: 30